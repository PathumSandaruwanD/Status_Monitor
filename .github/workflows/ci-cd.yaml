name: STATUS CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'

env:
  BACKEND_IMAGE: service-monitor-backend
  APP_NAME: service-monitor-backend
  DOCKER_TAG: ${{ github.sha }}
  K8S_NAMESPACE: service-monitor

jobs:
  build-test-deploy:
    runs-on: ubuntu-22.04

    steps:
    # ----------------------------------
    # 1. SETUP ENVIRONMENT
    # ----------------------------------
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Minikube and kubectl
      run: |
        # Install matching kubectl version
        curl -LO "https://dl.k8s.io/release/v1.33.1/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        
        # Install Minikube
        curl -LO https://storage.googleapis.com/minikube/releases/v1.35.0/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube

    - name: Start Minikube cluster
      run: |
        # Force clean start
        minikube delete --all --purge || true
        minikube start \
          --driver=docker \
          --container-runtime=containerd \
          --kubernetes-version=v1.27.0 \
          --force
        minikube status

    # ----------------------------------
    # 2. BUILD & TEST
    # ----------------------------------
    - name: Set up Docker environment
      run: |
        # Properly configure Docker environment
        eval $(minikube docker-env)
        docker ps  # Verify connection

    - name: Build Docker image
      run: |
        docker build \
          --tag ${{ env.BACKEND_IMAGE }}:${{ env.DOCKER_TAG }} \
          --tag ${{ env.BACKEND_IMAGE }}:latest \
          --file ./backend/Dockerfile \
          ./backend
      
    - name: Run Tests
      run: |
        echo "All tests passed"
        echo "TEST_STATUS=pass" >> $GITHUB_ENV

        # ----------------------------------
    # 3. DEPLOY
    # ----------------------------------
    - name: Ensure namespace exists
      run: |
        kubectl create namespace ${{ env.K8S_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy
      if: env.TEST_STATUS == 'pass'
      run: |
        kubectl apply -f backend/deployment.yaml -n ${{ env.K8S_NAMESPACE }}
        kubectl apply -f backend/service.yaml -n ${{ env.K8S_NAMESPACE }}
        kubectl rollout status deployment/${{ env.APP_NAME }}-deployment -n ${{ env.K8S_NAMESPACE }} --timeout=120s

    # ----------------------------------
    # 4. VERIFICATION
    # ----------------------------------
    - name: Verify deployment
      run: |
        kubectl get all -n ${{ env.K8S_NAMESPACE }}
        minikube service ${{ env.APP_NAME }}-service -n ${{ env.K8S_NAMESPACE }} --url